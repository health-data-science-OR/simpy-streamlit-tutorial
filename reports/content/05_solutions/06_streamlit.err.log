Traceback (most recent call last):
  File "/home/tom/miniconda3/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/tom/miniconda3/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/tom/miniconda3/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/home/tom/miniconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/tom/miniconda3/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/tom/miniconda3/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/tom/miniconda3/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
'''
Script to complete a basic run of the model and display a table of
results.

The model is imported from a pypi package 'treat_sim'

Full documentation and source code for `treat_sim` is available as 
* Jupyter Book: https://tommonks.github.io/treatment-centre-sim/
* github: https://github.com/TomMonks/treatment-centre-sim

A conda environment has been provided locally,but the model can be pip installed
`pip install treat_sim==1.0.0`

This will be adapted into a basic streamlit app
'''
from treat_sim.model import Scenario, multiple_replications

# set the variables for the run.
# these are just a subset of the total available for this example...
n_triage = 1
n_exam = 3
n_cubicles_1 = 1

# examination mean
exam_mean = 16.0

# runs
replications = 10

# Setup scenario using supplied variables
args = Scenario(n_triage=n_triage, n_exam=n_exam, n_cubicles_1=n_cubicles_1,
                exam_mean=exam_mean)

# run multiple replications of the model.
results = multiple_replications(args, n_reps=replications)

# print mean results.
print(results.mean().round(1))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 16[0m
[1;32m      1[0m [38;5;124;03m'''[39;00m
[1;32m      2[0m [38;5;124;03mScript to complete a basic run of the model and display a table of[39;00m
[1;32m      3[0m [38;5;124;03mresults.[39;00m
[0;32m   (...)[0m
[1;32m     14[0m [38;5;124;03mThis will be adapted into a basic streamlit app[39;00m
[1;32m     15[0m [38;5;124;03m'''[39;00m
[0;32m---> 16[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtreat_sim[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmodel[39;00m [38;5;28;01mimport[39;00m Scenario, multiple_replications
[1;32m     18[0m [38;5;66;03m# set the variables for the run.[39;00m
[1;32m     19[0m [38;5;66;03m# these are just a subset of the total available for this example...[39;00m
[1;32m     20[0m n_triage [38;5;241m=[39m [38;5;241m1[39m

[0;31mModuleNotFoundError[0m: No module named 'treat_sim'

